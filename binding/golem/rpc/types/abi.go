// Code generated by wit-bindgen-go. DO NOT EDIT.

package types

import (
	wallclock "github.com/golemcloud/golem-go/binding/wasi/clocks/wall-clock"
	"go.bytecodealliance.org/cm"
	"unsafe"
)

// TupleURIU64Shape is used for storage in variant or result types.
type TupleURIU64Shape struct {
	_     cm.HostLayout
	shape [unsafe.Sizeof(cm.Tuple[URI, uint64]{})]byte
}

func lower_UUID(v UUID) (f0 uint64, f1 uint64) {
	f0 = (uint64)(v.HighBits)
	f1 = (uint64)(v.LowBits)
	return
}

func lower_ComponentID(v ComponentID) (f0 uint64, f1 uint64) {
	f0, f1 = lower_UUID(v.UUID)
	return
}

func lower_WorkerID(v WorkerID) (f0 uint64, f1 uint64, f2 *uint8, f3 uint32) {
	f0, f1 = lower_ComponentID(v.ComponentID)
	f2, f3 = cm.LowerString(v.WorkerName)
	return
}

// RPCErrorShape is used for storage in variant or result types.
type RPCErrorShape struct {
	_     cm.HostLayout
	shape [unsafe.Sizeof(RPCError{})]byte
}

func lower_DateTime(v wallclock.DateTime) (f0 uint64, f1 uint32) {
	f0 = (uint64)(v.Seconds)
	f1 = (uint32)(v.Nanoseconds)
	return
}

// UUIDShape is used for storage in variant or result types.
type UUIDShape struct {
	_     cm.HostLayout
	shape [unsafe.Sizeof(UUID{})]byte
}

func lower_WitValue(v WitValue) (f0 *WitNode, f1 uint32) {
	f0, f1 = cm.LowerList(v.Nodes)
	return
}

func lower_WitType(v WitType) (f0 *WitTypeNode, f1 uint32) {
	f0, f1 = cm.LowerList(v.Nodes)
	return
}

func lower_ValueAndType(v ValueAndType) (f0 *WitNode, f1 uint32, f2 *WitTypeNode, f3 uint32) {
	f0, f1 = lower_WitValue(v.Value)
	f2, f3 = lower_WitType(v.Typ)
	return
}
