// Code generated by wit-bindgen-go. DO NOT EDIT.

package types

import (
	"go.bytecodealliance.org/cm"
)

// This file contains wasmimport and wasmexport declarations for "golem:rpc@0.2.1".

//go:wasmimport golem:rpc/types@0.2.1 [resource-drop]wasm-rpc
//go:noescape
func wasmimport_WasmRPCResourceDrop(self0 uint32)

//go:wasmimport golem:rpc/types@0.2.1 [constructor]wasm-rpc
//go:noescape
func wasmimport_NewWasmRPC(workerId0 uint64, workerId1 uint64, workerId2 *uint8, workerId3 uint32) (result0 uint32)

//go:wasmimport golem:rpc/types@0.2.1 [static]wasm-rpc.ephemeral
//go:noescape
func wasmimport_WasmRPCEphemeral(componentId0 uint64, componentId1 uint64) (result0 uint32)

//go:wasmimport golem:rpc/types@0.2.1 [method]wasm-rpc.async-invoke-and-await
//go:noescape
func wasmimport_WasmRPCAsyncInvokeAndAwait(self0 uint32, functionName0 *uint8, functionName1 uint32, functionParams0 *WitValue, functionParams1 uint32) (result0 uint32)

//go:wasmimport golem:rpc/types@0.2.1 [method]wasm-rpc.invoke
//go:noescape
func wasmimport_WasmRPCInvoke(self0 uint32, functionName0 *uint8, functionName1 uint32, functionParams0 *WitValue, functionParams1 uint32, result *cm.Result[RPCError, struct{}, RPCError])

//go:wasmimport golem:rpc/types@0.2.1 [method]wasm-rpc.invoke-and-await
//go:noescape
func wasmimport_WasmRPCInvokeAndAwait(self0 uint32, functionName0 *uint8, functionName1 uint32, functionParams0 *WitValue, functionParams1 uint32, result *cm.Result[RPCErrorShape, WitValue, RPCError])

//go:wasmimport golem:rpc/types@0.2.1 [method]wasm-rpc.schedule-cancelable-invocation
//go:noescape
func wasmimport_WasmRPCScheduleCancelableInvocation(self0 uint32, scheduledTime0 uint64, scheduledTime1 uint32, functionName0 *uint8, functionName1 uint32, functionParams0 *WitValue, functionParams1 uint32) (result0 uint32)

//go:wasmimport golem:rpc/types@0.2.1 [method]wasm-rpc.schedule-invocation
//go:noescape
func wasmimport_WasmRPCScheduleInvocation(self0 uint32, scheduledTime0 uint64, scheduledTime1 uint32, functionName0 *uint8, functionName1 uint32, functionParams0 *WitValue, functionParams1 uint32)

//go:wasmimport golem:rpc/types@0.2.1 [resource-drop]future-invoke-result
//go:noescape
func wasmimport_FutureInvokeResultResourceDrop(self0 uint32)

//go:wasmimport golem:rpc/types@0.2.1 [method]future-invoke-result.get
//go:noescape
func wasmimport_FutureInvokeResultGet(self0 uint32, result *cm.Option[cm.Result[RPCErrorShape, WitValue, RPCError]])

//go:wasmimport golem:rpc/types@0.2.1 [method]future-invoke-result.subscribe
//go:noescape
func wasmimport_FutureInvokeResultSubscribe(self0 uint32) (result0 uint32)

//go:wasmimport golem:rpc/types@0.2.1 [resource-drop]cancellation-token
//go:noescape
func wasmimport_CancellationTokenResourceDrop(self0 uint32)

//go:wasmimport golem:rpc/types@0.2.1 [method]cancellation-token.cancel
//go:noescape
func wasmimport_CancellationTokenCancel(self0 uint32)

//go:wasmimport golem:rpc/types@0.2.1 parse-uuid
//go:noescape
func wasmimport_ParseUUID(uuid0 *uint8, uuid1 uint32, result *cm.Result[UUIDShape, UUID, string])

//go:wasmimport golem:rpc/types@0.2.1 uuid-to-string
//go:noescape
func wasmimport_UUIDToString(uuid0 uint64, uuid1 uint64, result *string)

//go:wasmimport golem:rpc/types@0.2.1 extract-value
//go:noescape
func wasmimport_ExtractValue(vnt0 *WitNode, vnt1 uint32, vnt2 *WitTypeNode, vnt3 uint32, result *WitValue)

//go:wasmimport golem:rpc/types@0.2.1 extract-type
//go:noescape
func wasmimport_ExtractType(vnt0 *WitNode, vnt1 uint32, vnt2 *WitTypeNode, vnt3 uint32, result *WitType)
