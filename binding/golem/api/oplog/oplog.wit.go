// Code generated by wit-bindgen-go. DO NOT EDIT.

// Package oplog represents the imported interface "golem:api/oplog@1.1.7".
//
// Host interface for enumerating and searching for worker oplogs
package oplog

import (
	"github.com/golemcloud/golem-go/binding/golem/api/context"
	"github.com/golemcloud/golem-go/binding/golem/api/host"
	"github.com/golemcloud/golem-go/binding/golem/rpc/types"
	wallclock "github.com/golemcloud/golem-go/binding/wasi/clocks/wall-clock"
	"go.bytecodealliance.org/cm"
)

// DateTime represents the type alias "golem:api/oplog@1.1.7#datetime".
//
// See [wallclock.DateTime] for more information.
type DateTime = wallclock.DateTime

// WitValue represents the type alias "golem:api/oplog@1.1.7#wit-value".
//
// See [types.WitValue] for more information.
type WitValue = types.WitValue

// AccountID represents the type alias "golem:api/oplog@1.1.7#account-id".
//
// See [host.AccountID] for more information.
type AccountID = host.AccountID

// ComponentVersion represents the type alias "golem:api/oplog@1.1.7#component-version".
//
// See [host.ComponentVersion] for more information.
type ComponentVersion = host.ComponentVersion

// OplogIndex represents the type alias "golem:api/oplog@1.1.7#oplog-index".
//
// See [host.OplogIndex] for more information.
type OplogIndex = host.OplogIndex

// PersistenceLevel represents the type alias "golem:api/oplog@1.1.7#persistence-level".
//
// See [host.PersistenceLevel] for more information.
type PersistenceLevel = host.PersistenceLevel

// RetryPolicy represents the type alias "golem:api/oplog@1.1.7#retry-policy".
//
// See [host.RetryPolicy] for more information.
type RetryPolicy = host.RetryPolicy

// UUID represents the type alias "golem:api/oplog@1.1.7#uuid".
//
// See [host.UUID] for more information.
type UUID = host.UUID

// WorkerID represents the type alias "golem:api/oplog@1.1.7#worker-id".
//
// See [host.WorkerID] for more information.
type WorkerID = host.WorkerID

// Attribute represents the type alias "golem:api/oplog@1.1.7#attribute".
//
// See [context.Attribute] for more information.
type Attribute = context.Attribute

// AttributeValue represents the type alias "golem:api/oplog@1.1.7#attribute-value".
//
// See [context.AttributeValue] for more information.
type AttributeValue = context.AttributeValue

// SpanID represents the type alias "golem:api/oplog@1.1.7#span-id".
//
// See [context.SpanID] for more information.
type SpanID = context.SpanID

// TraceID represents the type alias "golem:api/oplog@1.1.7#trace-id".
//
// See [context.TraceID] for more information.
type TraceID = context.TraceID

// WrappedFunctionType represents the variant "golem:api/oplog@1.1.7#wrapped-function-type".
//
//	variant wrapped-function-type {
//		read-local,
//		write-local,
//		read-remote,
//		write-remote,
//		write-remote-batched(option<oplog-index>),
//	}
type WrappedFunctionType cm.Variant[uint8, cm.Option[OplogIndex], cm.Option[OplogIndex]]

// WrappedFunctionTypeReadLocal returns a [WrappedFunctionType] of case "read-local".
//
// The side-effect reads from the worker's local state (for example local file system,
// random generator, etc.)
func WrappedFunctionTypeReadLocal() WrappedFunctionType {
	var data struct{}
	return cm.New[WrappedFunctionType](0, data)
}

// ReadLocal returns true if [WrappedFunctionType] represents the variant case "read-local".
func (self *WrappedFunctionType) ReadLocal() bool {
	return self.Tag() == 0
}

// WrappedFunctionTypeWriteLocal returns a [WrappedFunctionType] of case "write-local".
//
// The side-effect writes to the worker's local state (for example local file system)
func WrappedFunctionTypeWriteLocal() WrappedFunctionType {
	var data struct{}
	return cm.New[WrappedFunctionType](1, data)
}

// WriteLocal returns true if [WrappedFunctionType] represents the variant case "write-local".
func (self *WrappedFunctionType) WriteLocal() bool {
	return self.Tag() == 1
}

// WrappedFunctionTypeReadRemote returns a [WrappedFunctionType] of case "read-remote".
//
// The side-effect reads from external state (for example a key-value store)
func WrappedFunctionTypeReadRemote() WrappedFunctionType {
	var data struct{}
	return cm.New[WrappedFunctionType](2, data)
}

// ReadRemote returns true if [WrappedFunctionType] represents the variant case "read-remote".
func (self *WrappedFunctionType) ReadRemote() bool {
	return self.Tag() == 2
}

// WrappedFunctionTypeWriteRemote returns a [WrappedFunctionType] of case "write-remote".
//
// The side-effect manipulates external state (for example an RPC call)
func WrappedFunctionTypeWriteRemote() WrappedFunctionType {
	var data struct{}
	return cm.New[WrappedFunctionType](3, data)
}

// WriteRemote returns true if [WrappedFunctionType] represents the variant case "write-remote".
func (self *WrappedFunctionType) WriteRemote() bool {
	return self.Tag() == 3
}

// WrappedFunctionTypeWriteRemoteBatched returns a [WrappedFunctionType] of case "write-remote-batched".
//
// The side-effect manipulates external state through multiple invoked functions (for
// example
// a HTTP request where reading the response involves multiple host function calls)
//
// On the first invocation of the batch, the parameter should be `None` - this triggers
// writing a `BeginRemoteWrite` entry in the oplog. Followup invocations should contain
// this entry's index as the parameter. In batched remote writes it is the caller's
// responsibility
// to manually write an `EndRemoteWrite` entry (using `end_function`) when the operation
// is completed.
func WrappedFunctionTypeWriteRemoteBatched(data cm.Option[OplogIndex]) WrappedFunctionType {
	return cm.New[WrappedFunctionType](4, data)
}

// WriteRemoteBatched returns a non-nil *[cm.Option[OplogIndex]] if [WrappedFunctionType] represents the variant case "write-remote-batched".
func (self *WrappedFunctionType) WriteRemoteBatched() *cm.Option[OplogIndex] {
	return cm.Case[cm.Option[OplogIndex]](self, 4)
}

var _WrappedFunctionTypeStrings = [5]string{
	"read-local",
	"write-local",
	"read-remote",
	"write-remote",
	"write-remote-batched",
}

// String implements [fmt.Stringer], returning the variant case name of v.
func (v WrappedFunctionType) String() string {
	return _WrappedFunctionTypeStrings[v.Tag()]
}

// PluginInstallationDescription represents the record "golem:api/oplog@1.1.7#plugin-installation-description".
//
//	record plugin-installation-description {
//		installation-id: uuid,
//		name: string,
//		version: string,
//		parameters: list<tuple<string, string>>,
//	}
type PluginInstallationDescription struct {
	_              cm.HostLayout      `json:"-"`
	InstallationID UUID               `json:"installation-id"`
	Name           string             `json:"name"`
	Version        string             `json:"version"`
	Parameters     cm.List[[2]string] `json:"parameters"`
}

// CreateParameters represents the record "golem:api/oplog@1.1.7#create-parameters".
//
//	record create-parameters {
//		timestamp: datetime,
//		worker-id: worker-id,
//		component-version: component-version,
//		args: list<string>,
//		env: list<tuple<string, string>>,
//		account-id: account-id,
//		parent: option<worker-id>,
//		component-size: u64,
//		initial-total-linear-memory-size: u64,
//		initial-active-plugins: list<plugin-installation-description>,
//	}
type CreateParameters struct {
	_                            cm.HostLayout                          `json:"-"`
	Timestamp                    DateTime                               `json:"timestamp"`
	WorkerID                     WorkerID                               `json:"worker-id"`
	ComponentVersion             ComponentVersion                       `json:"component-version"`
	Args                         cm.List[string]                        `json:"args"`
	Env                          cm.List[[2]string]                     `json:"env"`
	AccountID                    AccountID                              `json:"account-id"`
	Parent                       cm.Option[WorkerID]                    `json:"parent"`
	ComponentSize                uint64                                 `json:"component-size"`
	InitialTotalLinearMemorySize uint64                                 `json:"initial-total-linear-memory-size"`
	InitialActivePlugins         cm.List[PluginInstallationDescription] `json:"initial-active-plugins"`
}

// ImportedFunctionInvokedParameters represents the record "golem:api/oplog@1.1.7#imported-function-invoked-parameters".
//
//	record imported-function-invoked-parameters {
//		timestamp: datetime,
//		function-name: string,
//		request: wit-value,
//		response: wit-value,
//		wrapped-function-type: wrapped-function-type,
//	}
type ImportedFunctionInvokedParameters struct {
	_                   cm.HostLayout       `json:"-"`
	Timestamp           DateTime            `json:"timestamp"`
	FunctionName        string              `json:"function-name"`
	Request             WitValue            `json:"request"`
	Response            WitValue            `json:"response"`
	WrappedFunctionType WrappedFunctionType `json:"wrapped-function-type"`
}

// LocalSpanData represents the record "golem:api/oplog@1.1.7#local-span-data".
//
//	record local-span-data {
//		span-id: span-id,
//		start: datetime,
//		parent: option<span-id>,
//		linked-context: option<u64>,
//		attributes: list<attribute>,
//		inherited: bool,
//	}
type LocalSpanData struct {
	_      cm.HostLayout     `json:"-"`
	SpanID SpanID            `json:"span-id"`
	Start  DateTime          `json:"start"`
	Parent cm.Option[SpanID] `json:"parent"`

	// Optionally an index of the exported-function-invoked-parameters's invocation-context
	// field
	LinkedContext cm.Option[uint64]  `json:"linked-context"`
	Attributes    cm.List[Attribute] `json:"attributes"`
	Inherited     bool               `json:"inherited"`
}

// ExternalSpanData represents the record "golem:api/oplog@1.1.7#external-span-data".
//
//	record external-span-data {
//		span-id: span-id,
//	}
type ExternalSpanData struct {
	_      cm.HostLayout `json:"-"`
	SpanID SpanID        `json:"span-id"`
}

// SpanData represents the variant "golem:api/oplog@1.1.7#span-data".
//
//	variant span-data {
//		local-span(local-span-data),
//		external-span(external-span-data),
//	}
type SpanData cm.Variant[uint8, LocalSpanDataShape, LocalSpanData]

// SpanDataLocalSpan returns a [SpanData] of case "local-span".
func SpanDataLocalSpan(data LocalSpanData) SpanData {
	return cm.New[SpanData](0, data)
}

// LocalSpan returns a non-nil *[LocalSpanData] if [SpanData] represents the variant case "local-span".
func (self *SpanData) LocalSpan() *LocalSpanData {
	return cm.Case[LocalSpanData](self, 0)
}

// SpanDataExternalSpan returns a [SpanData] of case "external-span".
func SpanDataExternalSpan(data ExternalSpanData) SpanData {
	return cm.New[SpanData](1, data)
}

// ExternalSpan returns a non-nil *[ExternalSpanData] if [SpanData] represents the variant case "external-span".
func (self *SpanData) ExternalSpan() *ExternalSpanData {
	return cm.Case[ExternalSpanData](self, 1)
}

var _SpanDataStrings = [2]string{
	"local-span",
	"external-span",
}

// String implements [fmt.Stringer], returning the variant case name of v.
func (v SpanData) String() string {
	return _SpanDataStrings[v.Tag()]
}

// ExportedFunctionInvokedParameters represents the record "golem:api/oplog@1.1.7#exported-function-invoked-parameters".
//
//	record exported-function-invoked-parameters {
//		timestamp: datetime,
//		function-name: string,
//		request: list<wit-value>,
//		idempotency-key: string,
//		trace-id: trace-id,
//		trace-states: list<string>,
//		invocation-context: list<list<span-data>>,
//	}
type ExportedFunctionInvokedParameters struct {
	_              cm.HostLayout     `json:"-"`
	Timestamp      DateTime          `json:"timestamp"`
	FunctionName   string            `json:"function-name"`
	Request        cm.List[WitValue] `json:"request"`
	IdempotencyKey string            `json:"idempotency-key"`
	TraceID        TraceID           `json:"trace-id"`
	TraceStates    cm.List[string]   `json:"trace-states"`

	// The first one is the invocation context stack associated with the exported function
	// invocation,
	// and further stacks can be added that are referenced by the `linked-context` field
	// of `local-span-data`
	InvocationContext cm.List[cm.List[SpanData]] `json:"invocation-context"`
}

// ExportedFunctionCompletedParameters represents the record "golem:api/oplog@1.1.7#exported-function-completed-parameters".
//
//	record exported-function-completed-parameters {
//		timestamp: datetime,
//		response: wit-value,
//		consumed-fuel: s64,
//	}
type ExportedFunctionCompletedParameters struct {
	_            cm.HostLayout `json:"-"`
	Timestamp    DateTime      `json:"timestamp"`
	Response     WitValue      `json:"response"`
	ConsumedFuel int64         `json:"consumed-fuel"`
}

// ErrorParameters represents the record "golem:api/oplog@1.1.7#error-parameters".
//
//	record error-parameters {
//		timestamp: datetime,
//		error: string,
//	}
type ErrorParameters struct {
	_         cm.HostLayout `json:"-"`
	Timestamp DateTime      `json:"timestamp"`
	Error     string        `json:"error"`
}

// JumpParameters represents the record "golem:api/oplog@1.1.7#jump-parameters".
//
//	record jump-parameters {
//		timestamp: datetime,
//		start: oplog-index,
//		end: oplog-index,
//	}
type JumpParameters struct {
	_         cm.HostLayout `json:"-"`
	Timestamp DateTime      `json:"timestamp"`
	Start     OplogIndex    `json:"start"`
	End       OplogIndex    `json:"end"`
}

// ChangeRetryPolicyParameters represents the record "golem:api/oplog@1.1.7#change-retry-policy-parameters".
//
//	record change-retry-policy-parameters {
//		timestamp: datetime,
//		retry-policy: retry-policy,
//	}
type ChangeRetryPolicyParameters struct {
	_           cm.HostLayout `json:"-"`
	Timestamp   DateTime      `json:"timestamp"`
	RetryPolicy RetryPolicy   `json:"retry-policy"`
}

// EndAtomicRegionParameters represents the record "golem:api/oplog@1.1.7#end-atomic-region-parameters".
//
//	record end-atomic-region-parameters {
//		timestamp: datetime,
//		begin-index: oplog-index,
//	}
type EndAtomicRegionParameters struct {
	_          cm.HostLayout `json:"-"`
	Timestamp  DateTime      `json:"timestamp"`
	BeginIndex OplogIndex    `json:"begin-index"`
}

// EndRemoteWriteParameters represents the record "golem:api/oplog@1.1.7#end-remote-write-parameters".
//
//	record end-remote-write-parameters {
//		timestamp: datetime,
//		begin-index: oplog-index,
//	}
type EndRemoteWriteParameters struct {
	_          cm.HostLayout `json:"-"`
	Timestamp  DateTime      `json:"timestamp"`
	BeginIndex OplogIndex    `json:"begin-index"`
}

// ExportedFunctionInvocationParameters represents the record "golem:api/oplog@1.1.7#exported-function-invocation-parameters".
//
//	record exported-function-invocation-parameters {
//		idempotency-key: string,
//		function-name: string,
//		input: option<list<wit-value>>,
//	}
type ExportedFunctionInvocationParameters struct {
	_              cm.HostLayout                `json:"-"`
	IdempotencyKey string                       `json:"idempotency-key"`
	FunctionName   string                       `json:"function-name"`
	Input          cm.Option[cm.List[WitValue]] `json:"input"`
}

// WorkerInvocation represents the variant "golem:api/oplog@1.1.7#worker-invocation".
//
//	variant worker-invocation {
//		exported-function(exported-function-invocation-parameters),
//		manual-update(component-version),
//	}
type WorkerInvocation cm.Variant[uint8, ExportedFunctionInvocationParametersShape, ComponentVersion]

// WorkerInvocationExportedFunction returns a [WorkerInvocation] of case "exported-function".
func WorkerInvocationExportedFunction(data ExportedFunctionInvocationParameters) WorkerInvocation {
	return cm.New[WorkerInvocation](0, data)
}

// ExportedFunction returns a non-nil *[ExportedFunctionInvocationParameters] if [WorkerInvocation] represents the variant case "exported-function".
func (self *WorkerInvocation) ExportedFunction() *ExportedFunctionInvocationParameters {
	return cm.Case[ExportedFunctionInvocationParameters](self, 0)
}

// WorkerInvocationManualUpdate returns a [WorkerInvocation] of case "manual-update".
func WorkerInvocationManualUpdate(data ComponentVersion) WorkerInvocation {
	return cm.New[WorkerInvocation](1, data)
}

// ManualUpdate returns a non-nil *[ComponentVersion] if [WorkerInvocation] represents the variant case "manual-update".
func (self *WorkerInvocation) ManualUpdate() *ComponentVersion {
	return cm.Case[ComponentVersion](self, 1)
}

var _WorkerInvocationStrings = [2]string{
	"exported-function",
	"manual-update",
}

// String implements [fmt.Stringer], returning the variant case name of v.
func (v WorkerInvocation) String() string {
	return _WorkerInvocationStrings[v.Tag()]
}

// PendingWorkerInvocationParameters represents the record "golem:api/oplog@1.1.7#pending-worker-invocation-parameters".
//
//	record pending-worker-invocation-parameters {
//		timestamp: datetime,
//		invocation: worker-invocation,
//	}
type PendingWorkerInvocationParameters struct {
	_          cm.HostLayout    `json:"-"`
	Timestamp  DateTime         `json:"timestamp"`
	Invocation WorkerInvocation `json:"invocation"`
}

// UpdateDescription represents the variant "golem:api/oplog@1.1.7#update-description".
//
//	variant update-description {
//		auto-update,
//		snapshot-based(list<u8>),
//	}
type UpdateDescription cm.Variant[uint8, cm.List[uint8], cm.List[uint8]]

// UpdateDescriptionAutoUpdate returns a [UpdateDescription] of case "auto-update".
//
// Automatic update by replaying the oplog on the new version
func UpdateDescriptionAutoUpdate() UpdateDescription {
	var data struct{}
	return cm.New[UpdateDescription](0, data)
}

// AutoUpdate returns true if [UpdateDescription] represents the variant case "auto-update".
func (self *UpdateDescription) AutoUpdate() bool {
	return self.Tag() == 0
}

// UpdateDescriptionSnapshotBased returns a [UpdateDescription] of case "snapshot-based".
//
// Custom update by loading a given snapshot on the new version
func UpdateDescriptionSnapshotBased(data cm.List[uint8]) UpdateDescription {
	return cm.New[UpdateDescription](1, data)
}

// SnapshotBased returns a non-nil *[cm.List[uint8]] if [UpdateDescription] represents the variant case "snapshot-based".
func (self *UpdateDescription) SnapshotBased() *cm.List[uint8] {
	return cm.Case[cm.List[uint8]](self, 1)
}

var _UpdateDescriptionStrings = [2]string{
	"auto-update",
	"snapshot-based",
}

// String implements [fmt.Stringer], returning the variant case name of v.
func (v UpdateDescription) String() string {
	return _UpdateDescriptionStrings[v.Tag()]
}

// PendingUpdateParameters represents the record "golem:api/oplog@1.1.7#pending-update-parameters".
//
//	record pending-update-parameters {
//		timestamp: datetime,
//		target-version: component-version,
//		update-description: update-description,
//	}
type PendingUpdateParameters struct {
	_                 cm.HostLayout     `json:"-"`
	Timestamp         DateTime          `json:"timestamp"`
	TargetVersion     ComponentVersion  `json:"target-version"`
	UpdateDescription UpdateDescription `json:"update-description"`
}

// SuccessfulUpdateParameters represents the record "golem:api/oplog@1.1.7#successful-update-parameters".
//
//	record successful-update-parameters {
//		timestamp: datetime,
//		target-version: component-version,
//		new-component-size: u64,
//		new-active-plugins: list<plugin-installation-description>,
//	}
type SuccessfulUpdateParameters struct {
	_                cm.HostLayout                          `json:"-"`
	Timestamp        DateTime                               `json:"timestamp"`
	TargetVersion    ComponentVersion                       `json:"target-version"`
	NewComponentSize uint64                                 `json:"new-component-size"`
	NewActivePlugins cm.List[PluginInstallationDescription] `json:"new-active-plugins"`
}

// FailedUpdateParameters represents the record "golem:api/oplog@1.1.7#failed-update-parameters".
//
//	record failed-update-parameters {
//		timestamp: datetime,
//		target-version: component-version,
//		details: option<string>,
//	}
type FailedUpdateParameters struct {
	_             cm.HostLayout     `json:"-"`
	Timestamp     DateTime          `json:"timestamp"`
	TargetVersion ComponentVersion  `json:"target-version"`
	Details       cm.Option[string] `json:"details"`
}

// GrowMemoryParameters represents the record "golem:api/oplog@1.1.7#grow-memory-parameters".
//
//	record grow-memory-parameters {
//		timestamp: datetime,
//		delta: u64,
//	}
type GrowMemoryParameters struct {
	_         cm.HostLayout `json:"-"`
	Timestamp DateTime      `json:"timestamp"`
	Delta     uint64        `json:"delta"`
}

// WorkerResourceID represents the u64 "golem:api/oplog@1.1.7#worker-resource-id".
//
//	type worker-resource-id = u64
type WorkerResourceID uint64

// CreateResourceParameters represents the record "golem:api/oplog@1.1.7#create-resource-parameters".
//
//	record create-resource-parameters {
//		timestamp: datetime,
//		resource-id: worker-resource-id,
//	}
type CreateResourceParameters struct {
	_          cm.HostLayout    `json:"-"`
	Timestamp  DateTime         `json:"timestamp"`
	ResourceID WorkerResourceID `json:"resource-id"`
}

// DropResourceParameters represents the record "golem:api/oplog@1.1.7#drop-resource-parameters".
//
//	record drop-resource-parameters {
//		timestamp: datetime,
//		resource-id: worker-resource-id,
//	}
type DropResourceParameters struct {
	_          cm.HostLayout    `json:"-"`
	Timestamp  DateTime         `json:"timestamp"`
	ResourceID WorkerResourceID `json:"resource-id"`
}

// DescribeResourceParameters represents the record "golem:api/oplog@1.1.7#describe-resource-parameters".
//
//	record describe-resource-parameters {
//		timestamp: datetime,
//		resource-id: worker-resource-id,
//		resource-name: string,
//		resource-params: list<wit-value>,
//	}
type DescribeResourceParameters struct {
	_              cm.HostLayout     `json:"-"`
	Timestamp      DateTime          `json:"timestamp"`
	ResourceID     WorkerResourceID  `json:"resource-id"`
	ResourceName   string            `json:"resource-name"`
	ResourceParams cm.List[WitValue] `json:"resource-params"`
}

// LogLevel represents the enum "golem:api/oplog@1.1.7#log-level".
//
//	enum log-level {
//		stdout,
//		stderr,
//		trace,
//		debug,
//		info,
//		warn,
//		error,
//		critical
//	}
type LogLevel uint8

const (
	LogLevelStdout LogLevel = iota
	LogLevelStderr
	LogLevelTrace
	LogLevelDebug
	LogLevelInfo
	LogLevelWarn
	LogLevelError
	LogLevelCritical
)

var _LogLevelStrings = [8]string{
	"stdout",
	"stderr",
	"trace",
	"debug",
	"info",
	"warn",
	"error",
	"critical",
}

// String implements [fmt.Stringer], returning the enum case name of e.
func (e LogLevel) String() string {
	return _LogLevelStrings[e]
}

// MarshalText implements [encoding.TextMarshaler].
func (e LogLevel) MarshalText() ([]byte, error) {
	return []byte(e.String()), nil
}

// UnmarshalText implements [encoding.TextUnmarshaler], unmarshaling into an enum
// case. Returns an error if the supplied text is not one of the enum cases.
func (e *LogLevel) UnmarshalText(text []byte) error {
	return _LogLevelUnmarshalCase(e, text)
}

var _LogLevelUnmarshalCase = cm.CaseUnmarshaler[LogLevel](_LogLevelStrings[:])

// LogParameters represents the record "golem:api/oplog@1.1.7#log-parameters".
//
//	record log-parameters {
//		timestamp: datetime,
//		level: log-level,
//		context: string,
//		message: string,
//	}
type LogParameters struct {
	_         cm.HostLayout `json:"-"`
	Timestamp DateTime      `json:"timestamp"`
	Level     LogLevel      `json:"level"`
	Context   string        `json:"context"`
	Message   string        `json:"message"`
}

// ActivatePluginParameters represents the record "golem:api/oplog@1.1.7#activate-plugin-parameters".
//
//	record activate-plugin-parameters {
//		timestamp: datetime,
//		plugin: plugin-installation-description,
//	}
type ActivatePluginParameters struct {
	_         cm.HostLayout                 `json:"-"`
	Timestamp DateTime                      `json:"timestamp"`
	Plugin    PluginInstallationDescription `json:"plugin"`
}

// DeactivatePluginParameters represents the record "golem:api/oplog@1.1.7#deactivate-plugin-parameters".
//
//	record deactivate-plugin-parameters {
//		timestamp: datetime,
//		plugin: plugin-installation-description,
//	}
type DeactivatePluginParameters struct {
	_         cm.HostLayout                 `json:"-"`
	Timestamp DateTime                      `json:"timestamp"`
	Plugin    PluginInstallationDescription `json:"plugin"`
}

// RevertParameters represents the record "golem:api/oplog@1.1.7#revert-parameters".
//
//	record revert-parameters {
//		timestamp: datetime,
//		start: oplog-index,
//		end: oplog-index,
//	}
type RevertParameters struct {
	_         cm.HostLayout `json:"-"`
	Timestamp DateTime      `json:"timestamp"`
	Start     OplogIndex    `json:"start"`
	End       OplogIndex    `json:"end"`
}

// CancelInvocationParameters represents the record "golem:api/oplog@1.1.7#cancel-invocation-parameters".
//
//	record cancel-invocation-parameters {
//		timestamp: datetime,
//		idempotency-key: string,
//	}
type CancelInvocationParameters struct {
	_              cm.HostLayout `json:"-"`
	Timestamp      DateTime      `json:"timestamp"`
	IdempotencyKey string        `json:"idempotency-key"`
}

// StartSpanParameters represents the record "golem:api/oplog@1.1.7#start-span-parameters".
//
//	record start-span-parameters {
//		timestamp: datetime,
//		span-id: span-id,
//		parent: option<span-id>,
//		linked-context: option<span-id>,
//		attributes: list<attribute>,
//	}
type StartSpanParameters struct {
	_             cm.HostLayout      `json:"-"`
	Timestamp     DateTime           `json:"timestamp"`
	SpanID        SpanID             `json:"span-id"`
	Parent        cm.Option[SpanID]  `json:"parent"`
	LinkedContext cm.Option[SpanID]  `json:"linked-context"`
	Attributes    cm.List[Attribute] `json:"attributes"`
}

// FinishSpanParameters represents the record "golem:api/oplog@1.1.7#finish-span-parameters".
//
//	record finish-span-parameters {
//		timestamp: datetime,
//		span-id: span-id,
//	}
type FinishSpanParameters struct {
	_         cm.HostLayout `json:"-"`
	Timestamp DateTime      `json:"timestamp"`
	SpanID    SpanID        `json:"span-id"`
}

// SetSpanAttributeParameters represents the record "golem:api/oplog@1.1.7#set-span-attribute-parameters".
//
//	record set-span-attribute-parameters {
//		timestamp: datetime,
//		span-id: span-id,
//		key: string,
//		value: attribute-value,
//	}
type SetSpanAttributeParameters struct {
	_         cm.HostLayout  `json:"-"`
	Timestamp DateTime       `json:"timestamp"`
	SpanID    SpanID         `json:"span-id"`
	Key       string         `json:"key"`
	Value     AttributeValue `json:"value"`
}

// ChangePersistenceLevelParameters represents the record "golem:api/oplog@1.1.7#change-persistence-level-parameters".
//
//	record change-persistence-level-parameters {
//		timestamp: datetime,
//		persistence-level: persistence-level,
//	}
type ChangePersistenceLevelParameters struct {
	_                cm.HostLayout    `json:"-"`
	Timestamp        DateTime         `json:"timestamp"`
	PersistenceLevel PersistenceLevel `json:"persistence-level"`
}

// OplogEntry represents the variant "golem:api/oplog@1.1.7#oplog-entry".
//
//	variant oplog-entry {
//		create(create-parameters),
//		imported-function-invoked(imported-function-invoked-parameters),
//		exported-function-invoked(exported-function-invoked-parameters),
//		exported-function-completed(exported-function-completed-parameters),
//		suspend(datetime),
//		error(error-parameters),
//		no-op(datetime),
//		jump(jump-parameters),
//		interrupted(datetime),
//		exited(datetime),
//		change-retry-policy(change-retry-policy-parameters),
//		begin-atomic-region(datetime),
//		end-atomic-region(end-atomic-region-parameters),
//		begin-remote-write(datetime),
//		end-remote-write(end-remote-write-parameters),
//		pending-worker-invocation(pending-worker-invocation-parameters),
//		pending-update(pending-update-parameters),
//		successful-update(successful-update-parameters),
//		failed-update(failed-update-parameters),
//		grow-memory(grow-memory-parameters),
//		create-resource(create-resource-parameters),
//		drop-resource(drop-resource-parameters),
//		describe-resource(describe-resource-parameters),
//		log(log-parameters),
//		restart(datetime),
//		activate-plugin(activate-plugin-parameters),
//		deactivate-plugin(deactivate-plugin-parameters),
//		revert(revert-parameters),
//		cancel-invocation(cancel-invocation-parameters),
//		start-span(start-span-parameters),
//		finish-span(finish-span-parameters),
//		set-span-attribute(set-span-attribute-parameters),
//		change-persistence-level(change-persistence-level-parameters),
//	}
type OplogEntry cm.Variant[uint8, CreateParametersShape, CreateParameters]

// OplogEntryCreate returns a [OplogEntry] of case "create".
//
// The initial worker oplog entry
func OplogEntryCreate(data CreateParameters) OplogEntry {
	return cm.New[OplogEntry](0, data)
}

// Create returns a non-nil *[CreateParameters] if [OplogEntry] represents the variant case "create".
func (self *OplogEntry) Create() *CreateParameters {
	return cm.Case[CreateParameters](self, 0)
}

// OplogEntryImportedFunctionInvoked returns a [OplogEntry] of case "imported-function-invoked".
//
// The worker invoked a host function
func OplogEntryImportedFunctionInvoked(data ImportedFunctionInvokedParameters) OplogEntry {
	return cm.New[OplogEntry](1, data)
}

// ImportedFunctionInvoked returns a non-nil *[ImportedFunctionInvokedParameters] if [OplogEntry] represents the variant case "imported-function-invoked".
func (self *OplogEntry) ImportedFunctionInvoked() *ImportedFunctionInvokedParameters {
	return cm.Case[ImportedFunctionInvokedParameters](self, 1)
}

// OplogEntryExportedFunctionInvoked returns a [OplogEntry] of case "exported-function-invoked".
//
// The worker has been invoked
func OplogEntryExportedFunctionInvoked(data ExportedFunctionInvokedParameters) OplogEntry {
	return cm.New[OplogEntry](2, data)
}

// ExportedFunctionInvoked returns a non-nil *[ExportedFunctionInvokedParameters] if [OplogEntry] represents the variant case "exported-function-invoked".
func (self *OplogEntry) ExportedFunctionInvoked() *ExportedFunctionInvokedParameters {
	return cm.Case[ExportedFunctionInvokedParameters](self, 2)
}

// OplogEntryExportedFunctionCompleted returns a [OplogEntry] of case "exported-function-completed".
//
// The worker has completed an invocation
func OplogEntryExportedFunctionCompleted(data ExportedFunctionCompletedParameters) OplogEntry {
	return cm.New[OplogEntry](3, data)
}

// ExportedFunctionCompleted returns a non-nil *[ExportedFunctionCompletedParameters] if [OplogEntry] represents the variant case "exported-function-completed".
func (self *OplogEntry) ExportedFunctionCompleted() *ExportedFunctionCompletedParameters {
	return cm.Case[ExportedFunctionCompletedParameters](self, 3)
}

// OplogEntrySuspend returns a [OplogEntry] of case "suspend".
//
// Worker suspended
func OplogEntrySuspend(data DateTime) OplogEntry {
	return cm.New[OplogEntry](4, data)
}

// Suspend returns a non-nil *[DateTime] if [OplogEntry] represents the variant case "suspend".
func (self *OplogEntry) Suspend() *DateTime {
	return cm.Case[DateTime](self, 4)
}

// OplogEntryError returns a [OplogEntry] of case "error".
//
// Worker failed
func OplogEntryError(data ErrorParameters) OplogEntry {
	return cm.New[OplogEntry](5, data)
}

// Error returns a non-nil *[ErrorParameters] if [OplogEntry] represents the variant case "error".
func (self *OplogEntry) Error() *ErrorParameters {
	return cm.Case[ErrorParameters](self, 5)
}

// OplogEntryNoOp returns a [OplogEntry] of case "no-op".
//
// Marker entry added when get-oplog-index is called from the worker, to make the
// jumping behavior
// more predictable.
func OplogEntryNoOp(data DateTime) OplogEntry {
	return cm.New[OplogEntry](6, data)
}

// NoOp returns a non-nil *[DateTime] if [OplogEntry] represents the variant case "no-op".
func (self *OplogEntry) NoOp() *DateTime {
	return cm.Case[DateTime](self, 6)
}

// OplogEntryJump returns a [OplogEntry] of case "jump".
//
// The worker needs to recover up to the given target oplog index and continue running
// from
// the source oplog index from there
// `jump` is an oplog region representing that from the end of that region we want
// to go back to the start and
// ignore all recorded operations in between.
func OplogEntryJump(data JumpParameters) OplogEntry {
	return cm.New[OplogEntry](7, data)
}

// Jump returns a non-nil *[JumpParameters] if [OplogEntry] represents the variant case "jump".
func (self *OplogEntry) Jump() *JumpParameters {
	return cm.Case[JumpParameters](self, 7)
}

// OplogEntryInterrupted returns a [OplogEntry] of case "interrupted".
//
// Indicates that the worker has been interrupted at this point.
// Only used to recompute the worker's (cached) status, has no effect on execution.
func OplogEntryInterrupted(data DateTime) OplogEntry {
	return cm.New[OplogEntry](8, data)
}

// Interrupted returns a non-nil *[DateTime] if [OplogEntry] represents the variant case "interrupted".
func (self *OplogEntry) Interrupted() *DateTime {
	return cm.Case[DateTime](self, 8)
}

// OplogEntryExited returns a [OplogEntry] of case "exited".
//
// Indicates that the worker has been exited using WASI's exit function.
func OplogEntryExited(data DateTime) OplogEntry {
	return cm.New[OplogEntry](9, data)
}

// Exited returns a non-nil *[DateTime] if [OplogEntry] represents the variant case "exited".
func (self *OplogEntry) Exited() *DateTime {
	return cm.Case[DateTime](self, 9)
}

// OplogEntryChangeRetryPolicy returns a [OplogEntry] of case "change-retry-policy".
//
// Overrides the worker's retry policy
func OplogEntryChangeRetryPolicy(data ChangeRetryPolicyParameters) OplogEntry {
	return cm.New[OplogEntry](10, data)
}

// ChangeRetryPolicy returns a non-nil *[ChangeRetryPolicyParameters] if [OplogEntry] represents the variant case "change-retry-policy".
func (self *OplogEntry) ChangeRetryPolicy() *ChangeRetryPolicyParameters {
	return cm.Case[ChangeRetryPolicyParameters](self, 10)
}

// OplogEntryBeginAtomicRegion returns a [OplogEntry] of case "begin-atomic-region".
//
// Begins an atomic region. All oplog entries after `BeginAtomicRegion` are to be
// ignored during
// recovery except if there is a corresponding `EndAtomicRegion` entry.
func OplogEntryBeginAtomicRegion(data DateTime) OplogEntry {
	return cm.New[OplogEntry](11, data)
}

// BeginAtomicRegion returns a non-nil *[DateTime] if [OplogEntry] represents the variant case "begin-atomic-region".
func (self *OplogEntry) BeginAtomicRegion() *DateTime {
	return cm.Case[DateTime](self, 11)
}

// OplogEntryEndAtomicRegion returns a [OplogEntry] of case "end-atomic-region".
//
// Ends an atomic region. All oplog entries between the corresponding `BeginAtomicRegion`
// and this
// entry are to be considered during recovery, and the begin/end markers can be removed
// during oplog
// compaction.
func OplogEntryEndAtomicRegion(data EndAtomicRegionParameters) OplogEntry {
	return cm.New[OplogEntry](12, data)
}

// EndAtomicRegion returns a non-nil *[EndAtomicRegionParameters] if [OplogEntry] represents the variant case "end-atomic-region".
func (self *OplogEntry) EndAtomicRegion() *EndAtomicRegionParameters {
	return cm.Case[EndAtomicRegionParameters](self, 12)
}

// OplogEntryBeginRemoteWrite returns a [OplogEntry] of case "begin-remote-write".
//
// Begins a remote write operation. Only used when idempotence mode is off. In this
// case each
// remote write must be surrounded by a `BeginRemoteWrite` and `EndRemoteWrite` log
// pair and
// unfinished remote writes cannot be recovered.
func OplogEntryBeginRemoteWrite(data DateTime) OplogEntry {
	return cm.New[OplogEntry](13, data)
}

// BeginRemoteWrite returns a non-nil *[DateTime] if [OplogEntry] represents the variant case "begin-remote-write".
func (self *OplogEntry) BeginRemoteWrite() *DateTime {
	return cm.Case[DateTime](self, 13)
}

// OplogEntryEndRemoteWrite returns a [OplogEntry] of case "end-remote-write".
//
// Marks the end of a remote write operation. Only used when idempotence mode is off.
func OplogEntryEndRemoteWrite(data EndRemoteWriteParameters) OplogEntry {
	return cm.New[OplogEntry](14, data)
}

// EndRemoteWrite returns a non-nil *[EndRemoteWriteParameters] if [OplogEntry] represents the variant case "end-remote-write".
func (self *OplogEntry) EndRemoteWrite() *EndRemoteWriteParameters {
	return cm.Case[EndRemoteWriteParameters](self, 14)
}

// OplogEntryPendingWorkerInvocation returns a [OplogEntry] of case "pending-worker-invocation".
//
// An invocation request arrived while the worker was busy
func OplogEntryPendingWorkerInvocation(data PendingWorkerInvocationParameters) OplogEntry {
	return cm.New[OplogEntry](15, data)
}

// PendingWorkerInvocation returns a non-nil *[PendingWorkerInvocationParameters] if [OplogEntry] represents the variant case "pending-worker-invocation".
func (self *OplogEntry) PendingWorkerInvocation() *PendingWorkerInvocationParameters {
	return cm.Case[PendingWorkerInvocationParameters](self, 15)
}

// OplogEntryPendingUpdate returns a [OplogEntry] of case "pending-update".
//
// An update request arrived and will be applied as soon the worker restarts
func OplogEntryPendingUpdate(data PendingUpdateParameters) OplogEntry {
	return cm.New[OplogEntry](16, data)
}

// PendingUpdate returns a non-nil *[PendingUpdateParameters] if [OplogEntry] represents the variant case "pending-update".
func (self *OplogEntry) PendingUpdate() *PendingUpdateParameters {
	return cm.Case[PendingUpdateParameters](self, 16)
}

// OplogEntrySuccessfulUpdate returns a [OplogEntry] of case "successful-update".
//
// An update was successfully applied
func OplogEntrySuccessfulUpdate(data SuccessfulUpdateParameters) OplogEntry {
	return cm.New[OplogEntry](17, data)
}

// SuccessfulUpdate returns a non-nil *[SuccessfulUpdateParameters] if [OplogEntry] represents the variant case "successful-update".
func (self *OplogEntry) SuccessfulUpdate() *SuccessfulUpdateParameters {
	return cm.Case[SuccessfulUpdateParameters](self, 17)
}

// OplogEntryFailedUpdate returns a [OplogEntry] of case "failed-update".
//
// An update failed to be applied
func OplogEntryFailedUpdate(data FailedUpdateParameters) OplogEntry {
	return cm.New[OplogEntry](18, data)
}

// FailedUpdate returns a non-nil *[FailedUpdateParameters] if [OplogEntry] represents the variant case "failed-update".
func (self *OplogEntry) FailedUpdate() *FailedUpdateParameters {
	return cm.Case[FailedUpdateParameters](self, 18)
}

// OplogEntryGrowMemory returns a [OplogEntry] of case "grow-memory".
//
// Increased total linear memory size
func OplogEntryGrowMemory(data GrowMemoryParameters) OplogEntry {
	return cm.New[OplogEntry](19, data)
}

// GrowMemory returns a non-nil *[GrowMemoryParameters] if [OplogEntry] represents the variant case "grow-memory".
func (self *OplogEntry) GrowMemory() *GrowMemoryParameters {
	return cm.Case[GrowMemoryParameters](self, 19)
}

// OplogEntryCreateResource returns a [OplogEntry] of case "create-resource".
//
// Created a resource instance
func OplogEntryCreateResource(data CreateResourceParameters) OplogEntry {
	return cm.New[OplogEntry](20, data)
}

// CreateResource returns a non-nil *[CreateResourceParameters] if [OplogEntry] represents the variant case "create-resource".
func (self *OplogEntry) CreateResource() *CreateResourceParameters {
	return cm.Case[CreateResourceParameters](self, 20)
}

// OplogEntryDropResource returns a [OplogEntry] of case "drop-resource".
//
// Dropped a resource instance
func OplogEntryDropResource(data DropResourceParameters) OplogEntry {
	return cm.New[OplogEntry](21, data)
}

// DropResource returns a non-nil *[DropResourceParameters] if [OplogEntry] represents the variant case "drop-resource".
func (self *OplogEntry) DropResource() *DropResourceParameters {
	return cm.Case[DropResourceParameters](self, 21)
}

// OplogEntryDescribeResource returns a [OplogEntry] of case "describe-resource".
//
// Adds additional information for a created resource instance
func OplogEntryDescribeResource(data DescribeResourceParameters) OplogEntry {
	return cm.New[OplogEntry](22, data)
}

// DescribeResource returns a non-nil *[DescribeResourceParameters] if [OplogEntry] represents the variant case "describe-resource".
func (self *OplogEntry) DescribeResource() *DescribeResourceParameters {
	return cm.Case[DescribeResourceParameters](self, 22)
}

// OplogEntryLog returns a [OplogEntry] of case "log".
//
// The worker emitted a log message
func OplogEntryLog(data LogParameters) OplogEntry {
	return cm.New[OplogEntry](23, data)
}

// Log returns a non-nil *[LogParameters] if [OplogEntry] represents the variant case "log".
func (self *OplogEntry) Log() *LogParameters {
	return cm.Case[LogParameters](self, 23)
}

// OplogEntryRestart returns a [OplogEntry] of case "restart".
//
// The worker's has been restarted, forgetting all its history
func OplogEntryRestart(data DateTime) OplogEntry {
	return cm.New[OplogEntry](24, data)
}

// Restart returns a non-nil *[DateTime] if [OplogEntry] represents the variant case "restart".
func (self *OplogEntry) Restart() *DateTime {
	return cm.Case[DateTime](self, 24)
}

// OplogEntryActivatePlugin returns a [OplogEntry] of case "activate-plugin".
//
// Activates a plugin
func OplogEntryActivatePlugin(data ActivatePluginParameters) OplogEntry {
	return cm.New[OplogEntry](25, data)
}

// ActivatePlugin returns a non-nil *[ActivatePluginParameters] if [OplogEntry] represents the variant case "activate-plugin".
func (self *OplogEntry) ActivatePlugin() *ActivatePluginParameters {
	return cm.Case[ActivatePluginParameters](self, 25)
}

// OplogEntryDeactivatePlugin returns a [OplogEntry] of case "deactivate-plugin".
//
// Deactivates a plugin
func OplogEntryDeactivatePlugin(data DeactivatePluginParameters) OplogEntry {
	return cm.New[OplogEntry](26, data)
}

// DeactivatePlugin returns a non-nil *[DeactivatePluginParameters] if [OplogEntry] represents the variant case "deactivate-plugin".
func (self *OplogEntry) DeactivatePlugin() *DeactivatePluginParameters {
	return cm.Case[DeactivatePluginParameters](self, 26)
}

// OplogEntryRevert returns a [OplogEntry] of case "revert".
//
// Revert a worker to a previous state
func OplogEntryRevert(data RevertParameters) OplogEntry {
	return cm.New[OplogEntry](27, data)
}

// Revert returns a non-nil *[RevertParameters] if [OplogEntry] represents the variant case "revert".
func (self *OplogEntry) Revert() *RevertParameters {
	return cm.Case[RevertParameters](self, 27)
}

// OplogEntryCancelInvocation returns a [OplogEntry] of case "cancel-invocation".
//
// Cancel a pending invocation
func OplogEntryCancelInvocation(data CancelInvocationParameters) OplogEntry {
	return cm.New[OplogEntry](28, data)
}

// CancelInvocation returns a non-nil *[CancelInvocationParameters] if [OplogEntry] represents the variant case "cancel-invocation".
func (self *OplogEntry) CancelInvocation() *CancelInvocationParameters {
	return cm.Case[CancelInvocationParameters](self, 28)
}

// OplogEntryStartSpan returns a [OplogEntry] of case "start-span".
//
// Start a new span in the invocation context
func OplogEntryStartSpan(data StartSpanParameters) OplogEntry {
	return cm.New[OplogEntry](29, data)
}

// StartSpan returns a non-nil *[StartSpanParameters] if [OplogEntry] represents the variant case "start-span".
func (self *OplogEntry) StartSpan() *StartSpanParameters {
	return cm.Case[StartSpanParameters](self, 29)
}

// OplogEntryFinishSpan returns a [OplogEntry] of case "finish-span".
//
// Finish an open span in the invocation context
func OplogEntryFinishSpan(data FinishSpanParameters) OplogEntry {
	return cm.New[OplogEntry](30, data)
}

// FinishSpan returns a non-nil *[FinishSpanParameters] if [OplogEntry] represents the variant case "finish-span".
func (self *OplogEntry) FinishSpan() *FinishSpanParameters {
	return cm.Case[FinishSpanParameters](self, 30)
}

// OplogEntrySetSpanAttribute returns a [OplogEntry] of case "set-span-attribute".
//
// Set an attribute on an open span in the invocation context
func OplogEntrySetSpanAttribute(data SetSpanAttributeParameters) OplogEntry {
	return cm.New[OplogEntry](31, data)
}

// SetSpanAttribute returns a non-nil *[SetSpanAttributeParameters] if [OplogEntry] represents the variant case "set-span-attribute".
func (self *OplogEntry) SetSpanAttribute() *SetSpanAttributeParameters {
	return cm.Case[SetSpanAttributeParameters](self, 31)
}

// OplogEntryChangePersistenceLevel returns a [OplogEntry] of case "change-persistence-level".
//
// Change the current persistence level
func OplogEntryChangePersistenceLevel(data ChangePersistenceLevelParameters) OplogEntry {
	return cm.New[OplogEntry](32, data)
}

// ChangePersistenceLevel returns a non-nil *[ChangePersistenceLevelParameters] if [OplogEntry] represents the variant case "change-persistence-level".
func (self *OplogEntry) ChangePersistenceLevel() *ChangePersistenceLevelParameters {
	return cm.Case[ChangePersistenceLevelParameters](self, 32)
}

var _OplogEntryStrings = [33]string{
	"create",
	"imported-function-invoked",
	"exported-function-invoked",
	"exported-function-completed",
	"suspend",
	"error",
	"no-op",
	"jump",
	"interrupted",
	"exited",
	"change-retry-policy",
	"begin-atomic-region",
	"end-atomic-region",
	"begin-remote-write",
	"end-remote-write",
	"pending-worker-invocation",
	"pending-update",
	"successful-update",
	"failed-update",
	"grow-memory",
	"create-resource",
	"drop-resource",
	"describe-resource",
	"log",
	"restart",
	"activate-plugin",
	"deactivate-plugin",
	"revert",
	"cancel-invocation",
	"start-span",
	"finish-span",
	"set-span-attribute",
	"change-persistence-level",
}

// String implements [fmt.Stringer], returning the variant case name of v.
func (v OplogEntry) String() string {
	return _OplogEntryStrings[v.Tag()]
}

// GetOplog represents the imported resource "golem:api/oplog@1.1.7#get-oplog".
//
//	resource get-oplog
type GetOplog cm.Resource

// ResourceDrop represents the imported resource-drop for resource "get-oplog".
//
// Drops a resource handle.
//
//go:nosplit
func (self GetOplog) ResourceDrop() {
	self0 := cm.Reinterpret[uint32](self)
	wasmimport_GetOplogResourceDrop((uint32)(self0))
	return
}

// NewGetOplog represents the imported constructor for resource "get-oplog".
//
//	constructor(worker-id: worker-id, start: oplog-index)
//
//go:nosplit
func NewGetOplog(workerID WorkerID, start OplogIndex) (result GetOplog) {
	workerId0, workerId1, workerId2, workerId3 := lower_WorkerID(workerID)
	start0 := (uint64)(start)
	result0 := wasmimport_NewGetOplog((uint64)(workerId0), (uint64)(workerId1), (*uint8)(workerId2), (uint32)(workerId3), (uint64)(start0))
	result = cm.Reinterpret[GetOplog]((uint32)(result0))
	return
}

// GetNext represents the imported method "get-next".
//
//	get-next: func() -> option<list<oplog-entry>>
//
//go:nosplit
func (self GetOplog) GetNext() (result cm.Option[cm.List[OplogEntry]]) {
	self0 := cm.Reinterpret[uint32](self)
	wasmimport_GetOplogGetNext((uint32)(self0), &result)
	return
}

// SearchOplog represents the imported resource "golem:api/oplog@1.1.7#search-oplog".
//
//	resource search-oplog
type SearchOplog cm.Resource

// ResourceDrop represents the imported resource-drop for resource "search-oplog".
//
// Drops a resource handle.
//
//go:nosplit
func (self SearchOplog) ResourceDrop() {
	self0 := cm.Reinterpret[uint32](self)
	wasmimport_SearchOplogResourceDrop((uint32)(self0))
	return
}

// NewSearchOplog represents the imported constructor for resource "search-oplog".
//
//	constructor(worker-id: worker-id, text: string)
//
//go:nosplit
func NewSearchOplog(workerID WorkerID, text string) (result SearchOplog) {
	workerId0, workerId1, workerId2, workerId3 := lower_WorkerID(workerID)
	text0, text1 := cm.LowerString(text)
	result0 := wasmimport_NewSearchOplog((uint64)(workerId0), (uint64)(workerId1), (*uint8)(workerId2), (uint32)(workerId3), (*uint8)(text0), (uint32)(text1))
	result = cm.Reinterpret[SearchOplog]((uint32)(result0))
	return
}

// GetNext represents the imported method "get-next".
//
//	get-next: func() -> option<list<tuple<oplog-index, oplog-entry>>>
//
//go:nosplit
func (self SearchOplog) GetNext() (result cm.Option[cm.List[cm.Tuple[OplogIndex, OplogEntry]]]) {
	self0 := cm.Reinterpret[uint32](self)
	wasmimport_SearchOplogGetNext((uint32)(self0), &result)
	return
}
